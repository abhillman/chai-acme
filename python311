#!/bin/bash
# Use of python311 with dependencies, binaries, and other aspects of the environment with nix under IntelliJ.
# Instruct IntelliJ to use this script by specifying a path to this file as the "system" python interpreter.
# Make sure this file is named `python311` (IntelliJ may otherwise reject it) executable by running `chmod +x ...``.
#
# If a `shell.nix` file is located in the same path as this wrapper script, its contents will be used in addition to
# the dependencies listed below via `-p`.
#
# In order to prevent the additional necessity of a `shell.nix` file (for now!), one can enter a nix-shell instead of
# running python by running with an environment variable with the incantation `SHELL_ONLY=t ./python311`.
#
# Copyright (C) 2032 Aryeh Hillman (aryeh@aryeh.fun)
# Permission to copy and modify is granted under the AGPLv3 license
# Last revised 11/2/2023

# Exit upon any failure.
set -euo pipefail

# This is a fix for Mac OS X when using the Python debugger in IntelliJ, which executes a script that is located
# in a path that has spaces in its name without the addition of quotes. Hypothesis as to why this merely happens
# here and not when using the cpython interpreter: arguments are passed via the `execve` syscall, which are unpacked
# in C by traversing argv, which is an array of strings. When working with `$@` in bash (the equivalent of `ARGV`),
# it is easier to just delegate to system python than to work with `ARGV` as an array, as arrays are finicky in bash.
CLEAN_ARGS_SCRIPT="import sys; print(' '.join(sys.argv[1:]).replace('Application Support', 'Application\\ Support'))"
CLEAN_ARGS="$(python3 -c "${CLEAN_ARGS_SCRIPT}" "${@:-}")"

# List of nixpkgs to be loaded; find more at https://search.nixos.org
NIXPKGS=(
    'black'
    'jq'
    'python311'
    'python311Packages.lxml'
    'python311Packages.pip'
    'python311Packages.setuptools'
    'python311Packages.cram'
)

# Fire up the nix shell
if [[ "${SHELL_ONLY:-}" != "" ]]; then
  # If SHELL_ONLY=t is passed, then enter nix shell directly, which launches bash
  >&2 echo "Note!: SHELL_ONLY=${SHELL_ONLY}. Provided arguments will be ignored."
  nix-shell --packages "${NIXPKGS[@]}"
else
  # If SHELL_ONLY is unset, which is the default when run by IntelliJ, launch python311 with args to wrapper
  nix-shell --packages "${NIXPKGS[@]}" --run "python3.11 ${CLEAN_ARGS}"
fi
